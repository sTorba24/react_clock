{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","clockTimer","state","date","Date","toLocaleTimeString","this","window","setInterval","setState","console","log","name","props","clearInterval","React","Component","App","isClockVisible","clockName","className","type","onClick","Math","round","random","ReactDOM","render","document","getElementById"],"mappings":"sNAUaA,EAAb,4MACEC,gBADF,IAGEC,MAAQ,CACNC,MAAM,IAAIC,MAAOC,sBAJrB,uDAOE,WAAqB,IAAD,OAClBC,KAAKL,WAAaM,OAAOC,aAAY,WACnC,EAAKC,SAAS,CAAEN,MAAM,IAAIC,MAAOC,uBAGjCK,QAAQC,IAAI,EAAKT,MAAMC,QACtB,OAbP,gCAgBE,YAAqC,IAAhBS,EAAe,EAAfA,KACfN,KAAKO,MAAMD,OAASA,GAEtBF,QAAQC,IAAR,qCAA0CC,EAA1C,eAAqDN,KAAKO,MAAMD,SAnBtE,kCAuBE,WACEE,cAAcR,KAAKL,cAxBvB,oBA2BE,WACE,IAAQE,EAASG,KAAKJ,MAAdC,KAER,OACE,mCACGA,QAhCT,GAA2BY,IAAMC,WCA3BC,E,4MACJf,MAAQ,CACNgB,gBAAgB,EAChBC,UAAW,G,4CAGb,WAAU,IAAD,OACP,EAAsCb,KAAKJ,MAAnCgB,EAAR,EAAQA,eAAgBC,EAAxB,EAAwBA,UAExB,OACE,sBAAKC,UAAU,MAAf,UACE,mDAAoBD,KACpB,8CAEG,IACAD,GAAmB,cAAC,EAAD,CAAON,KAAMO,OAEnC,wBACEE,KAAK,SACLC,QAAS,WACP,EAAKb,SAAS,CAAES,gBAAiBA,KAHrC,SAMGA,EAAiB,aAAe,eAEnC,wBACEG,KAAK,SACLC,QAAS,WACP,EAAKb,SAAS,CAAEU,UAAWI,KAAKC,MAAsB,IAAhBD,KAAKE,aAH/C,oC,GAzBUV,IAAMC,WAqCTC,IC5CfS,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.983e840f.chunk.js","sourcesContent":["import React from 'react';\n\ntype State = {\n  date: string;\n};\n\ntype Props = {\n  name: number;\n};\n\nexport class Clock extends React.Component<Props, State> {\n  clockTimer?: number;\n\n  state = {\n    date: new Date().toLocaleTimeString(),\n  };\n\n  componentDidMount() {\n    this.clockTimer = window.setInterval(() => {\n      this.setState({ date: new Date().toLocaleTimeString() });\n\n      // eslint-disable-next-line\n      console.log(this.state.date);\n    }, 1000);\n  }\n\n  componentDidUpdate({ name }: Props) {\n    if (this.props.name !== name) {\n      // eslint-disable-next-line no-console\n      console.log(`The Clock was renamed from ${name} to ${this.props.name}`);\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.clockTimer);\n  }\n\n  render() {\n    const { date } = this.state;\n\n    return (\n      <>\n        {date}\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\n\nimport { Clock } from './components/Clock';\n\ninterface State {\n  isClockVisible: boolean;\n  clockName: number;\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    isClockVisible: true,\n    clockName: 0,\n  };\n\n  render() {\n    const { isClockVisible, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>{`React clock ${clockName}`}</h1>\n        <p>\n          Current time:\n          {' '}\n          {isClockVisible && (<Clock name={clockName} />)}\n        </p>\n        <button\n          type=\"button\"\n          onClick={() => {\n            this.setState({ isClockVisible: !isClockVisible });\n          }}\n        >\n          {isClockVisible ? 'Hide Clock' : 'Show Clock'}\n        </button>\n        <button\n          type=\"button\"\n          onClick={() => {\n            this.setState({ clockName: Math.round(Math.random() * 100) });\n          }}\n        >\n          Set random name\n        </button>\n      </div>\n    );\n  }\n}\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}